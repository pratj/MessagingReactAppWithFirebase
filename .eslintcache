[{"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\App.js":"3","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Auth\\Login\\Login.component.jsx":"4","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Auth\\Register\\Register.component.jsx":"5","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\server\\firebase.js":"6","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\actioncreator.js":"7","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\reducer.js":"8","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\actiontypes.js":"9","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\SideBar.component.jsx":"10","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\UserInfo\\UserInfo.component.jsx":"11","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\Channels\\Channels.component.jsx":"12","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\Messages.component.jsx":"13","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageContent\\MessageContent.component.jsx":"14","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageHeader\\MessageHeader.component.jsx":"15","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageInput\\MessageInput.component.jsx":"16","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\ImageUpload\\ImageUpload.component.jsx":"17","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\FavouriteChannels\\FavouriteChannels.component.jsx":"18","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\PrivateChat\\PrivateChat.component.jsx":"19","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\Notification\\Notification.component.jsx":"20","C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\welcome.js":"21","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\index.js":"22","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\App.js":"23","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\server\\firebase.js":"24","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\actioncreator.js":"25","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\reducer.js":"26","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Auth\\Login\\Login.component.jsx":"27","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Auth\\Register\\Register.component.jsx":"28","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\actiontypes.js":"29","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\SideBar.component.jsx":"30","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\Messages.component.jsx":"31","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\Channels\\Channels.component.jsx":"32","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\FavouriteChannels\\FavouriteChannels.component.jsx":"33","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\UserInfo\\UserInfo.component.jsx":"34","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageContent\\MessageContent.component.jsx":"35","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageHeader\\MessageHeader.component.jsx":"36","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageInput\\MessageInput.component.jsx":"37","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\ImageUpload\\ImageUpload.component.jsx":"38"},{"size":2126,"mtime":1608152548727,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":505,"mtime":1608145941148,"results":"42","hashOfConfig":"40"},{"size":3756,"mtime":1608154100746,"results":"43","hashOfConfig":"40"},{"size":6598,"mtime":1608154461459,"results":"44","hashOfConfig":"40"},{"size":659,"mtime":1608127324649,"results":"45","hashOfConfig":"40"},{"size":788,"mtime":1608144598423,"results":"46","hashOfConfig":"40"},{"size":1654,"mtime":1608144624425,"results":"47","hashOfConfig":"40"},{"size":211,"mtime":1608144610995,"results":"48","hashOfConfig":"40"},{"size":606,"mtime":1608150556000,"results":"49","hashOfConfig":"40"},{"size":1728,"mtime":1608150471683,"results":"50","hashOfConfig":"40"},{"size":6231,"mtime":1608150183729,"results":"51","hashOfConfig":"40"},{"size":4898,"mtime":1608144083313,"results":"52","hashOfConfig":"40"},{"size":900,"mtime":1608144090358,"results":"53","hashOfConfig":"40"},{"size":1191,"mtime":1608151046991,"results":"54","hashOfConfig":"40"},{"size":2719,"mtime":1608145616280,"results":"55","hashOfConfig":"40"},{"size":1405,"mtime":1608145025528,"results":"56","hashOfConfig":"40"},{"size":1633,"mtime":1608150311168,"results":"57","hashOfConfig":"40"},{"size":4536,"mtime":1608144579135,"results":"58","hashOfConfig":"40"},{"size":2200,"mtime":1608144532018,"results":"59","hashOfConfig":"40"},{"size":478,"mtime":1608152391459,"results":"60","hashOfConfig":"40"},{"size":2126,"mtime":1608152548727,"results":"61","hashOfConfig":"62"},{"size":505,"mtime":1608145941148,"results":"63","hashOfConfig":"62"},{"size":659,"mtime":1608127324649,"results":"64","hashOfConfig":"62"},{"size":788,"mtime":1608144598423,"results":"65","hashOfConfig":"62"},{"size":1654,"mtime":1608144624425,"results":"66","hashOfConfig":"62"},{"size":3756,"mtime":1608154100746,"results":"67","hashOfConfig":"62"},{"size":6598,"mtime":1608154461459,"results":"68","hashOfConfig":"62"},{"size":211,"mtime":1608144610995,"results":"69","hashOfConfig":"62"},{"size":606,"mtime":1608150556000,"results":"70","hashOfConfig":"62"},{"size":4898,"mtime":1608144083313,"results":"71","hashOfConfig":"62"},{"size":6231,"mtime":1608150183729,"results":"72","hashOfConfig":"62"},{"size":1633,"mtime":1608150311168,"results":"73","hashOfConfig":"62"},{"size":1728,"mtime":1608150471683,"results":"74","hashOfConfig":"62"},{"size":900,"mtime":1608144090358,"results":"75","hashOfConfig":"62"},{"size":1191,"mtime":1608151046991,"results":"76","hashOfConfig":"62"},{"size":2719,"mtime":1608145616280,"results":"77","hashOfConfig":"62"},{"size":1405,"mtime":1608145025528,"results":"78","hashOfConfig":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11njrl",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},"1s5qna4",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\index.js",["159"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Auth\\Login\\Login.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Auth\\Register\\Register.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\server\\firebase.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\actioncreator.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\reducer.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\store\\actiontypes.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\SideBar.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\UserInfo\\UserInfo.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\Channels\\Channels.component.jsx",["160","161","162"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\Messages.component.jsx",["163","164"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageContent\\MessageContent.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageHeader\\MessageHeader.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\MessageInput\\MessageInput.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Messages\\ImageUpload\\ImageUpload.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\FavouriteChannels\\FavouriteChannels.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\PrivateChat\\PrivateChat.component.jsx",["165","166"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\components\\Sidebar\\Notification\\Notification.component.jsx",["167","168"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote\\snote\\src\\welcome.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\index.js",["169"],"import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\n//import { AppLoader } from \"./components/AppLoader/AppLoader.component\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from './App';\nimport Login from \"./components/Auth/Login/Login.component\";\nimport Register from \"./components/Auth/Register/Register.component\";\nimport firebase from \"./server/firebase\";\nimport { setUser } from \"./store/actioncreator\";\nimport { combinedReducers } from \"./store/reducer\";\n\n\nconst store = createStore(combinedReducers)\n\nconst Index = (props) => {\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    })\n  }, []);\n\n  console.log(\"Debug\", props.currentUser);\n\n  return (<>\n    {/* <AppLoader loading={props.loading && props.location.pathname === \"/\"} /> */}\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/\" component={App} />\n      {/* <Route path=\"/home\" component={welcome} /> */}\n      \n    </Switch></>)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.user.currentUser,\n    //loading: state.channel.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => { dispatch(setUser(user)) }\n  }\n}\n\nconst IndexWithRouter = withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <IndexWithRouter />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n",["170","171"],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\server\\firebase.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\actioncreator.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\reducer.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Auth\\Login\\Login.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Auth\\Register\\Register.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\store\\actiontypes.js",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\SideBar.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\Messages.component.jsx",["172","173"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Comment, Segment } from 'semantic-ui-react';\r\nimport firebase from \"../../server/firebase\";\r\nimport { removefavouriteChannel, setfavouriteChannel } from \"../../store/actioncreator\";\r\nimport MessageContent from \"./MessageContent/MessageContent.component\";\r\nimport MessageHeader from './MessageHeader/MessageHeader.component';\r\nimport MessageInput from \"./MessageInput/MessageInput.component\";\r\nimport \"./Messages.css\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    const messageRef = firebase.database().ref('messages');\r\n\r\n    const usersRef = firebase.database().ref('users');\r\n\r\n    const [messagesState, setMessagesState] = useState([]);\r\n\r\n    const [searchTermState, setSearchTermState] = useState(\"\");\r\n\r\n    let divRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (props.channel) {\r\n            setMessagesState([]);\r\n            messageRef.child(props.channel.id).on('child_added', (snap) => {\r\n                setMessagesState((currentState) => {\r\n                    let updatedState = [...currentState];\r\n                    updatedState.push(snap.val());\r\n                    return updatedState;\r\n                })\r\n            })\r\n\r\n            return () => messageRef.child(props.channel.id).off();\r\n        }\r\n    }, [props.channel])\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.user) {\r\n            usersRef.child(props.user.uid).child(\"favourite\")\r\n                .on('child_added', (snap) => {\r\n                    props.setfavouriteChannel(snap.val());\r\n                })\r\n\r\n            usersRef.child(props.user.uid).child(\"favourite\")\r\n                .on('child_removed', (snap) => {\r\n                    props.removefavouriteChannel(snap.val());\r\n                })\r\n\r\n            return () => usersRef.child(props.user.uid).child(\"favourite\").off();\r\n        }\r\n    }, [props.user])\r\n\r\n    useEffect(()=> {\r\n        divRef.scrollIntoView({behavior : 'smooth'});\r\n    },[messagesState])\r\n\r\n    const displayMessages = () => {\r\n        let messagesToDisplay = searchTermState ? filterMessageBySearchTerm() : messagesState;\r\n        if (messagesToDisplay.length > 0) {\r\n            return messagesToDisplay.map((message) => {\r\n                return <MessageContent imageLoaded={imageLoaded} ownMessage={message.user.id === props.user.uid} key={message.timestamp} message={message} />\r\n            })\r\n        }\r\n    }\r\n\r\n    const imageLoaded= () => {\r\n        divRef.scrollIntoView({behavior : 'smooth'});\r\n    }\r\n\r\n    const uniqueusersCount = () => {\r\n        const uniqueUsers = messagesState.reduce((acc, message) => {\r\n            if (!acc.includes(message.user.name)) {\r\n                acc.push(message.user.name);\r\n            }\r\n            return acc;\r\n        }, []);\r\n\r\n        return uniqueUsers.length;\r\n    }\r\n\r\n    const searchTermChange = (e) => {\r\n        const target = e.target;\r\n        setSearchTermState(target.value);\r\n    }\r\n\r\n    const filterMessageBySearchTerm = () => {\r\n        const regex = new RegExp(searchTermState, \"gi\");\r\n        const messages = messagesState.reduce((acc, message) => {\r\n            if ((message.content && message.content.match(regex)) || message.user.name.match(regex)) {\r\n                acc.push(message);\r\n            }\r\n            return acc;\r\n        }, []);\r\n\r\n        return messages;\r\n    }\r\n\r\n    const starChange = () => {\r\n        let favouriteRef = usersRef.child(props.user.uid).child(\"favourite\").child(props.channel.id);\r\n        if (isStarred()) {\r\n            favouriteRef.remove();\r\n        } else {\r\n            favouriteRef.set({ channelId: props.channel.id, channelName: props.channel.name })\r\n        }\r\n    }\r\n\r\n    const isStarred = () => {\r\n        return Object.keys(props.favouriteChannels).includes(props.channel?.id);\r\n    }\r\n\r\n    return <div className=\"messages\"><MessageHeader starChange={starChange} starred={isStarred()} isPrivateChat={props.channel?.isPrivateChat} searchTermChange={searchTermChange} channelName={props.channel?.name} uniqueUsers={uniqueusersCount()} />\r\n        <Segment className=\"messagecontent\">\r\n            <Comment.Group>\r\n                {displayMessages()}\r\n                <div ref={currentEl => divRef = currentEl}></div>\r\n            </Comment.Group>\r\n        </Segment>\r\n        <MessageInput /></div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channel: state.channel.currentChannel,\r\n        user: state.user.currentUser,\r\n        favouriteChannels: state.favouriteChannel.favouriteChannel\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setfavouriteChannel: (channel) => dispatch(setfavouriteChannel(channel)),\r\n        removefavouriteChannel: (channel) => dispatch(removefavouriteChannel(channel)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\Channels\\Channels.component.jsx",["174","175","176"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Icon, Menu, Modal, Segment } from 'semantic-ui-react';\r\nimport firebase from \"../../../server/firebase\";\r\nimport { setChannel } from \"../../../store/actioncreator\";\r\nimport './Channels.css';\r\n\r\n\r\nconst Channels = (props) => {\r\n    const [modalOpenState, setModalOpenState] = useState(false);\r\n    const [channelAddState, setChannelAddState] = useState({ name: '', description: '' });\r\n    const [isLoadingState, setLoadingState] = useState(false);\r\n    const [channelsState, setChannelsState] = useState([]);\r\n\r\n    const channelsRef = firebase.database().ref(\"channels\");\r\n    //const usersRef = firebase.database().ref(\"users\");\r\n\r\n    useEffect(() => {\r\n        channelsRef.on('child_added', (snap) => {\r\n            setChannelsState((currentState) => {\r\n                let updatedState = [...currentState];\r\n                updatedState.push(snap.val());               \r\n                return updatedState;\r\n            })\r\n        });\r\n\r\n        return () => channelsRef.off();\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        if (channelsState.length > 0) {\r\n            props.selectChannel(channelsState[0])\r\n        }\r\n    },[!props.channel ?channelsState : null ])\r\n\r\n    const openModal = () => {\r\n        setModalOpenState(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalOpenState(false);\r\n    }\r\n\r\n    const checkIfFormValid = () => {\r\n        return channelAddState && channelAddState.name && channelAddState.description;\r\n    }\r\n\r\n    const displayChannels = () => {\r\n        if (channelsState.length > 0) {\r\n            return channelsState.map((channel) => {\r\n                return <Menu.Item\r\n                    key={channel.id}\r\n                    name={channel.name}\r\n                    onClick={() => props.selectChannel(channel)}//\r\n                    active={props.channel && channel.id === props.channel.id}//\r\n                >\r\n                    \r\n                      {/* <Notification user={props.user} channel={props.channel}\r\n                        notificationChannelId={channel.id}\r\n                        displayName= {\"# \" + channel.name} /> */}\r\n                   \r\n                </Menu.Item>\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    // const selectChannel = (channel) => {\r\n    //     setLastVisited(props.user,props.channel);\r\n    //     setLastVisited(props.user,channel);\r\n    //     props.selectChannel(channel);\r\n    // }\r\n\r\n    // const setLastVisited = (user, channel) => {\r\n    //     const lastVisited = usersRef.child(user.uid).child(\"lastVisited\").child(channel.id);\r\n    //     lastVisited.set(firebase.database.ServerValue.TIMESTAMP);\r\n    //     lastVisited.onDisconnect().set(firebase.database.ServerValue.TIMESTAMP);\r\n    // }\r\n\r\n    const onSubmit = () => {\r\n\r\n        if (!checkIfFormValid()) {\r\n            return;\r\n        }\r\n\r\n        const key = channelsRef.push().key;\r\n\r\n        const channel = {\r\n            id: key,\r\n            name: channelAddState.name,\r\n            description: channelAddState.description,\r\n            created_by: {\r\n                name: props.user.displayName,\r\n                avatar: props.user.photoURL\r\n            }\r\n        }\r\n        setLoadingState(true); //true\r\n        channelsRef.child(key)\r\n            .update(channel)\r\n            .then(() => {\r\n                setChannelAddState({ name: '', description: '' });\r\n                setLoadingState(false);\r\n                closeModal();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n\r\n        let target = e.target;\r\n        setChannelAddState((currentState) => {\r\n            let updatedState = { ...currentState };\r\n            updatedState[target.name] = target.value;\r\n            return updatedState;\r\n        })\r\n    }\r\n\r\n    return <> <Menu.Menu style={{ marginTop: '35px' }}>\r\n        <Menu.Item style={{fontSize : '17px'}}>\r\n            <span>\r\n                <Icon name=\"comment alternate outline\" /> Channels / Meetings\r\n            </span>\r\n            ({channelsState.length})\r\n        </Menu.Item>\r\n        {displayChannels()}\r\n        <Menu.Item>\r\n            <span className=\"clickable\" onClick={openModal} >\r\n                <Icon name=\"add\" /> ADD\r\n            </span>\r\n        </Menu.Item>\r\n    </Menu.Menu>\r\n        <Modal open={modalOpenState} onClose={closeModal}>\r\n            <Modal.Header>\r\n                Create Meeting \r\n                   (   <small>  Start a Discussion!</small>  )\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Segment stacked>\r\n                        <Form.Input\r\n                            name=\"name\"\r\n                            value={channelAddState.name}\r\n                            onChange={handleInput}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meeting Name\"\r\n                        />\r\n                        <Form.Input\r\n                            name=\"description\"\r\n                            value={channelAddState.description}\r\n                            onChange={handleInput}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meeting Description\"\r\n                        />\r\n                    </Segment>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button loading={isLoadingState} onClick={onSubmit}>\r\n                    <Icon name=\"checkmark\" /> Save\r\n                </Button>\r\n                <Button onClick={closeModal}>\r\n                    <Icon name=\"remove\" /> Cancel\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currentUser,\r\n        channel: state.channel.currentChannel\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectChannel: (channel) => dispatch(setChannel(channel))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Channels);","C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\FavouriteChannels\\FavouriteChannels.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Sidebar\\UserInfo\\UserInfo.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageContent\\MessageContent.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageHeader\\MessageHeader.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\MessageInput\\MessageInput.component.jsx",[],"C:\\Users\\Admin\\Documents\\FrontEnd\\snote - Copy\\src\\components\\Messages\\ImageUpload\\ImageUpload.component.jsx",[],{"ruleId":"177","severity":1,"message":"178","line":30,"column":6,"nodeType":"179","endLine":30,"endColumn":8,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":28,"column":8,"nodeType":"179","endLine":28,"endColumn":10,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"183","line":34,"column":7,"nodeType":"179","endLine":34,"endColumn":46,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"185","line":34,"column":8,"nodeType":"186","endLine":34,"endColumn":44},{"ruleId":"177","severity":1,"message":"187","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":23,"suggestions":"188"},{"ruleId":"177","severity":1,"message":"189","line":54,"column":8,"nodeType":"179","endLine":54,"endColumn":20,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"191","line":45,"column":8,"nodeType":"179","endLine":45,"endColumn":20,"suggestions":"192"},{"ruleId":"177","severity":1,"message":"193","line":68,"column":8,"nodeType":"179","endLine":68,"endColumn":20,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":32,"column":59,"nodeType":"197","messageId":"198","endLine":32,"endColumn":61},{"ruleId":"177","severity":1,"message":"199","line":40,"column":8,"nodeType":"179","endLine":40,"endColumn":20,"suggestions":"200"},{"ruleId":"177","severity":1,"message":"178","line":30,"column":6,"nodeType":"179","endLine":30,"endColumn":8,"suggestions":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"177","severity":1,"message":"187","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":23,"suggestions":"206"},{"ruleId":"177","severity":1,"message":"189","line":54,"column":8,"nodeType":"179","endLine":54,"endColumn":20,"suggestions":"207"},{"ruleId":"177","severity":1,"message":"181","line":28,"column":8,"nodeType":"179","endLine":28,"endColumn":10,"suggestions":"208"},{"ruleId":"177","severity":1,"message":"183","line":34,"column":7,"nodeType":"179","endLine":34,"endColumn":46,"suggestions":"209"},{"ruleId":"177","severity":1,"message":"185","line":34,"column":8,"nodeType":"186","endLine":34,"endColumn":44},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["210"],"React Hook useEffect has a missing dependency: 'channelsRef'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'channelsState' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["212"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","React Hook useEffect has a missing dependency: 'messageRef'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has missing dependencies: 'props' and 'usersRef'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["214"],"React Hook useEffect has missing dependencies: 'connectedRef', 'statusRef', and 'usersRef'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'statusRef'. Either include it or remove the dependency array.",["216"],"array-callback-return","Array.prototype.reduce() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'messagesRef' and 'usersRef'. Either include them or remove the dependency array.",["217"],["218"],"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["221"],["222"],["223"],["224"],{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"225","fix":"241"},"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"242"},{"desc":"233","fix":"243"},{"desc":"227","fix":"244"},{"desc":"229","fix":"245"},"Update the dependencies array to be: [props]",{"range":"246","text":"247"},"Update the dependencies array to be: [channelsRef]",{"range":"248","text":"249"},"Update the dependencies array to be: [channelsState, props]",{"range":"250","text":"251"},"Update the dependencies array to be: [messageRef, props.channel]",{"range":"252","text":"253"},"Update the dependencies array to be: [props, props.user, usersRef]",{"range":"254","text":"255"},"Update the dependencies array to be: [connectedRef, props.user, statusRef, usersRef]",{"range":"256","text":"257"},"Update the dependencies array to be: [statusRef, usersState]",{"range":"258","text":"259"},"Update the dependencies array to be: [messagesRef, props.user, usersRef]",{"range":"260","text":"261"},{"range":"262","text":"247"},{"range":"263","text":"253"},{"range":"264","text":"255"},{"range":"265","text":"249"},{"range":"266","text":"251"},[993,995],"[props]",[1109,1111],"[channelsRef]",[1247,1286],"[channelsState, props]",[1344,1359],"[messageRef, props.channel]",[1908,1920],"[props, props.user, usersRef]",[1499,1511],"[connectedRef, props.user, statusRef, usersRef]",[2200,2212],"[statusRef, usersState]",[1417,1429],"[messagesRef, props.user, usersRef]",[993,995],[1344,1359],[1908,1920],[1109,1111],[1247,1286]]